import random

playing = True

suits = ('Hearts', 'Diamonds', 'Spades', 'Clubs')

ranks = ('Two', 'Three', 'Four', 'Five',
         'Six', 'Seven', 'Eight', 'Nine',
         'Ten', 'Jack', 'Queen', 'King',
         'Ace')

values = {'Two': 2, 'Three': 3, 'Four': 4, 'Five': 5,
          'Six': 6, 'Seven': 7, 'Eight': 8, 'Nine': 9,
          'Ten': 10, 'Jack': 10, 'Queen': 10, 'King': 10,
          'Ace': 11}


class Card:

    def __init__(self, suit, rank):
        self.rank = rank
        self.suit = suit

    def __str__(self):
        return self.rank + ' of ' + self.suit


class Deck:

    def __init__(self):
        self.deck = []
        for suit in suits:
            for rank in ranks:
                self.deck.append(Card(suit, rank))

    def __str__(self):
        deck_comp = ''
        for card in self.deck:
            deck_comp += '\n' + card.__str__()
        return 'the deck has: ' + deck_comp

    def shuffle(self):
        random.shuffle(self.deck)

    def deal(self):
        single_card = self.deck.pop()
        return single_card


class Hand:

    def __init__(self):
        self.cards = []
        self.value = 0
        self.aces = 0

    def add_card(self, card):
        self.cards.append(card)
        self.value += values[card.rank]

        if card.rank == "Ace":
            self.aces += 1

    def adjust_for_ace(self):

        while self.value > 21 and self.aces:
            self.value -= 10
            self.aces -= 1


class Chip:

    def __init__(self, total=100):
        self.total = total
        self.bet = 0

    def win_bet(self):
        self.total += self.bet

    def loose_bet(self):
        self.total -= self.bet


def take_bet(chips):
    while True:
        try:
            chips.bet = int(input('how much you would like to bet ?: '))
        except ValueError:
            print('ERROR provide an int')
        else:
            if chips.bet > chips.total:
                print('sorry not enough chips, you have {}'
                      .format(chips.total))
            else:
                break


def hit(deck, hand):
    single_card = deck.deal()
    hand.add_card(single_card)
    hand.adjust_for_ace()


def hit_stand(deck, hand):
    global playing

    while True:
        x = input('Hit or stand?? enter h or s ')

        if x[0].lower() == 'h':
            hit(deck, hand)
        elif x[0].lower() == 's':
            print('player stands')
            playing = False
        else:
            print('wrong input, enter h or s only')
            continue
        break


def show_some(player, dealer):
    print("\n Dealer's cards: ")
    print("first card hidden")
    print(dealer.cards[1])
    print()
    print('Players hand')

    for cards in player.cards:
        print(cards)


def show_all(player, dealer):
    print("\n Dealer's cards: ")
    for card in dealer.cards:
        print(card)
    print(f"Dealer's value {dealer.value}")

    print(f'Players hand {player.value}')

    for cards in player.cards:
        print(cards)
    print(f"Player value {player.value}")


def player_busts(chips):
    print("bust player")
    chips.loose_bet()


def player_wins(chips):
    print('Player wins')
    chips.win_bet()


def dealer_busts(chips):
    print('Player wins, Dealer busted')
    chips.win_bet()


def dealer_wins(chips):
    print('Dealer wins, Player busted')
    chips.loose_bet()


def push():
    print('Tie! Push !')


while True:
    print('welcome to black jack')

    deck = Deck()
    deck.shuffle()

    player_hand = Hand()
    player_hand.add_card(deck.deal())
    player_hand.add_card(deck.deal())
    dealer_hand = Hand()
    dealer_hand.add_card(deck.deal())
    dealer_hand.add_card(deck.deal())

    player_chips = Chip()

    take_bet(player_chips)

    show_some(player_hand, dealer_hand)

    while playing:
        hit_stand(deck, player_hand)
        show_some(player_hand, dealer_hand)

        if player_hand.value > 21:
            player_busts(player_chips)
            break

    if player_hand.value <= 21:
        while dealer_hand.value < 17:
            hit(deck, dealer_hand)

        show_all(player_hand, dealer_hand)

        if dealer_hand.value > 21:
            dealer_busts(player_chips)
        elif dealer_hand.value > player_hand.value:
            dealer_wins(player_chips)
        elif dealer_hand.value < player_hand.value:
            player_wins(player_chips)
        else:
            push()

    print('\n Player total chips are at: {}'.format(player_chips.total))
    new_game = input('next game ? y or n: ')
    if new_game[0].lower() == 'y':
        playing = True
        continue
    else:
        print('game over')
        break
